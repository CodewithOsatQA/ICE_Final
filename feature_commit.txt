commit aaa26b2ef3382493898b82e8c7179d19dc549f1e
Author: Owen <OJackson@qa.com>
Date:   Thu Oct 29 11:23:48 2020 +0000

    tests

diff --git a/src/main/java/com/qa/choonz/persistence/domain/Playlist.java b/src/main/java/com/qa/choonz/persistence/domain/Playlist.java
index ec3e201..8f9aaca 100644
--- a/src/main/java/com/qa/choonz/persistence/domain/Playlist.java
+++ b/src/main/java/com/qa/choonz/persistence/domain/Playlist.java
@@ -71,7 +71,6 @@ public class Playlist {
         this.tracks = tracks;
     }
 
-
     public Playlist(long id, @NotNull @Size(max = 100) String name, @NotNull @Size(max = 500) String description,
             @NotNull @Size(max = 1000) String artwork, List<Track> tracks, User user) {
         super();
diff --git a/src/main/java/com/qa/choonz/rest/controller/UserController.java b/src/main/java/com/qa/choonz/rest/controller/UserController.java
index e322f28..837601c 100644
--- a/src/main/java/com/qa/choonz/rest/controller/UserController.java
+++ b/src/main/java/com/qa/choonz/rest/controller/UserController.java
@@ -1,7 +1,5 @@
 package com.qa.choonz.rest.controller;
 
-
-
 import com.qa.choonz.persistence.domain.User;
 
 
diff --git a/src/main/java/com/qa/choonz/rest/dto/PlaylistDTO.java b/src/main/java/com/qa/choonz/rest/dto/PlaylistDTO.java
index 069f6ed..06aafeb 100644
--- a/src/main/java/com/qa/choonz/rest/dto/PlaylistDTO.java
+++ b/src/main/java/com/qa/choonz/rest/dto/PlaylistDTO.java
@@ -13,7 +13,7 @@ public class PlaylistDTO {
     private String name;
     private String description;
     private String artwork;
-    private List<TrackDTO> tracks = new ArrayList<>();
+    private List<Track> tracks = new ArrayList<>();
     private User user;
 
     public PlaylistDTO() {
@@ -27,7 +27,14 @@ public class PlaylistDTO {
     	this.name = name;
     }
     
-    public PlaylistDTO(String name, String description, String artwork, List<TrackDTO> tracks) {
+    public PlaylistDTO(String name, String Description, String artwork) {
+    	super();
+    	this.name = name;
+    	this.description = description;
+    	this.artwork = artwork;
+    }
+    
+    public PlaylistDTO(String name, String description, String artwork, List<Track> tracks) {
         super();
         this.name = name;
         this.description = description;
@@ -36,7 +43,7 @@ public class PlaylistDTO {
     }
 
 
-    public PlaylistDTO(Long id, String name, String description, String artwork, List<TrackDTO> tracks,User user) {
+    public PlaylistDTO(Long id, String name, String description, String artwork, List<Track> tracks,User user) {
         super();
         this.id = id;
         this.name = name;
@@ -112,14 +119,14 @@ public class PlaylistDTO {
     /**
      * @return the tracks
      */
-    public List<TrackDTO> getTracks() {
+    public List<Track> getTracks() {
         return tracks;
     }
 
     /**
      * @param tracks the tracks to set
      */
-    public void setTracks(List<TrackDTO> tracks) {
+    public void setTracks(List<Track> tracks) {
         this.tracks = tracks;
     }
     
diff --git a/src/test/java/com/qa/choonz/rest/dto/AlbumDTOTest.java b/src/test/java/com/qa/choonz/rest/dto/AlbumDTOTest.java
index bc7d2ec..871834d 100644
--- a/src/test/java/com/qa/choonz/rest/dto/AlbumDTOTest.java
+++ b/src/test/java/com/qa/choonz/rest/dto/AlbumDTOTest.java
@@ -38,7 +38,7 @@ public class AlbumDTOTest {
 				sBuilder
 				.append("\tTest ").append(activeTest).append("\n")
 				.append(div);
-				// Append info about vending machine here
+
 				
 				System.out.println(sBuilder.toString());
 				activeTest++;
diff --git a/src/test/java/com/qa/choonz/rest/dto/ArtistDTOTest.java b/src/test/java/com/qa/choonz/rest/dto/ArtistDTOTest.java
index e57dee9..030bd4c 100644
--- a/src/test/java/com/qa/choonz/rest/dto/ArtistDTOTest.java
+++ b/src/test/java/com/qa/choonz/rest/dto/ArtistDTOTest.java
@@ -35,7 +35,6 @@ public class ArtistDTOTest {
 				sBuilder
 				.append("\tTest ").append(activeTest).append("\n")
 				.append(div);
-				// Append info about vending machine here
 				
 				System.out.println(sBuilder.toString());
 				activeTest++;
diff --git a/src/test/java/com/qa/choonz/rest/dto/GenreDTOTest.java b/src/test/java/com/qa/choonz/rest/dto/GenreDTOTest.java
index 73a6e3d..3d6c797 100644
--- a/src/test/java/com/qa/choonz/rest/dto/GenreDTOTest.java
+++ b/src/test/java/com/qa/choonz/rest/dto/GenreDTOTest.java
@@ -36,7 +36,6 @@ public class GenreDTOTest {
 				sBuilder
 				.append("\tTest ").append(activeTest).append("\n")
 				.append(div);
-				// Append info about vending machine here
 				
 				System.out.println(sBuilder.toString());
 				activeTest++;
diff --git a/src/test/java/com/qa/choonz/rest/dto/PlaylistDTOTest.java b/src/test/java/com/qa/choonz/rest/dto/PlaylistDTOTest.java
index a7c3b47..fb3737b 100644
--- a/src/test/java/com/qa/choonz/rest/dto/PlaylistDTOTest.java
+++ b/src/test/java/com/qa/choonz/rest/dto/PlaylistDTOTest.java
@@ -11,6 +11,8 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
+import com.qa.choonz.persistence.domain.Track;
+
 public class PlaylistDTOTest {
 	
 
@@ -18,8 +20,8 @@ public class PlaylistDTOTest {
 	final Long id = 1L;
 	private String description;
 	private String artwork;
-	private String name;
-	private List<TrackDTO>tracks;
+	private String name = "Choonz";
+	private List<Track>tracks;
 	
 	private static int activeTest = 1;
 	private static StringBuilder sBuilder = new StringBuilder();
@@ -28,7 +30,7 @@ public class PlaylistDTOTest {
 
 	@BeforeEach
 	void init() {
-		this.tracks = new ArrayList<TrackDTO>();
+		this.tracks = new ArrayList<Track>();
 		this.testPlaylistDTO = new PlaylistDTO(
 				this.id, 
 				this.name);
@@ -38,7 +40,6 @@ public class PlaylistDTOTest {
 				sBuilder
 				.append("\tTest ").append(activeTest).append("\n")
 				.append(div);
-				// Append info about vending machine here
 				
 				System.out.println(sBuilder.toString());
 				activeTest++;
@@ -101,10 +102,10 @@ public class PlaylistDTOTest {
 		assertThat(this.testPlaylistDTO.getId() == newId);
 	}
 	
-//	@Test
-//	void GetNameTest() {
-//		assertThat(this.testPlaylistDTO.getName().equals(this.name));
-//	}
+	@Test
+	void GetNameTest() {
+		assertThat(this.testPlaylistDTO.getName().equals(this.name));
+	}
 	
 	@Test
 	void SetNameTest() {
@@ -133,7 +134,7 @@ public class PlaylistDTOTest {
 	@Test
 	void SetAlbumTest() {
 
-		List<TrackDTO> newTracks = new ArrayList<TrackDTO>();
+		List<Track> newTracks = new ArrayList<Track>();
 		this.testPlaylistDTO.setTracks(newTracks);
 		
 		assertThat(this.testPlaylistDTO.getTracks() == newTracks);
diff --git a/src/test/java/com/qa/choonz/service/AlbumServiceUnitTest.java b/src/test/java/com/qa/choonz/service/AlbumServiceUnitTest.java
index 06c1784..8a5561d 100644
--- a/src/test/java/com/qa/choonz/service/AlbumServiceUnitTest.java
+++ b/src/test/java/com/qa/choonz/service/AlbumServiceUnitTest.java
@@ -90,11 +90,11 @@ public class AlbumServiceUnitTest {
 	    @Test
 	    void updateTest() {
 	    	
-	        Album al = new Album("Sticky Fingers");
+	        Album al = new Album(testName);
 	        
 	        al.setId(this.id);
 
-	        AlbumDTO albumDTO = new AlbumDTO(id, "Sticky Fingers");
+	        AlbumDTO albumDTO = new AlbumDTO(id, testName);
 
 	        Album newAlbum = new Album(albumDTO.getName());
 	        
diff --git a/src/test/java/com/qa/choonz/service/ArtistServiceUnitTest.java b/src/test/java/com/qa/choonz/service/ArtistServiceUnitTest.java
index 0880195..475aef5 100644
--- a/src/test/java/com/qa/choonz/service/ArtistServiceUnitTest.java
+++ b/src/test/java/com/qa/choonz/service/ArtistServiceUnitTest.java
@@ -92,11 +92,11 @@ public class ArtistServiceUnitTest {
 	    @Test
 	    void updateTest() {
 	    	
-	        Artist art = new Artist("Nortorious BIG");
+	        Artist art = new Artist(testName);
 	        
 	        art.setId(this.id);
 
-	        ArtistDTO artistDTO = new ArtistDTO(id, "Nortorious BIG");
+	        ArtistDTO artistDTO = new ArtistDTO(id, testName);
 
 	        Artist newArtist = new Artist(artistDTO.getName());
 	        
diff --git a/src/test/java/com/qa/choonz/service/GenreServiceUnitTest.java b/src/test/java/com/qa/choonz/service/GenreServiceUnitTest.java
index dae2163..78c5a8c 100644
--- a/src/test/java/com/qa/choonz/service/GenreServiceUnitTest.java
+++ b/src/test/java/com/qa/choonz/service/GenreServiceUnitTest.java
@@ -92,11 +92,11 @@ public class GenreServiceUnitTest {
 	    @Test
 	    void updateTest() {
 	    	
-	    	Genre genre = new Genre("Rock");
+	    	Genre genre = new Genre(testName);
 	    	
 	        genre.setId(this.id);
 
-	        GenreDTO genreDTO = new GenreDTO(id, "Rock");
+	        GenreDTO genreDTO = new GenreDTO(id, testName);
 
 	        Genre newGenre = new Genre(genreDTO.getName());
 	        newGenre.setId(this.id);
diff --git a/src/test/java/com/qa/choonz/service/PlaylistServiceUnitTest.java b/src/test/java/com/qa/choonz/service/PlaylistServiceUnitTest.java
index bfb664c..e2d72b7 100644
--- a/src/test/java/com/qa/choonz/service/PlaylistServiceUnitTest.java
+++ b/src/test/java/com/qa/choonz/service/PlaylistServiceUnitTest.java
@@ -9,12 +9,21 @@ import java.util.ArrayList;
 import java.util.List;
 import java.util.Optional;
 
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.request;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
+
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.modelmapper.ModelMapper;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.boot.test.mock.mockito.MockBean;
+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
+import org.springframework.http.HttpMethod;
+import org.springframework.http.MediaType;
+import org.springframework.test.web.servlet.MockMvc;
+import com.fasterxml.jackson.databind.ObjectMapper;
 
 import com.qa.choonz.persistence.domain.Playlist;
 import com.qa.choonz.persistence.repository.PlaylistRepository;
@@ -26,12 +35,17 @@ public class PlaylistServiceUnitTest {
 	
 	@Autowired
     private PlaylistService service;
+	
+	@Autowired
+	 private MockMvc mock;
 
     @MockBean
     private PlaylistRepository repository;
 
     @MockBean
     private ModelMapper modelMapper;
+    
+    private ObjectMapper objectMapper;
 
 
     private List<Playlist> playlists;
@@ -41,6 +55,9 @@ public class PlaylistServiceUnitTest {
 
     final Long id = 1L;
     final String testName = "Funky Disco Robot";
+    final String testDesc = "UpBeat";
+    final String testArtwork = "art";
+    
 
     @BeforeEach
     void init() {
@@ -91,26 +108,19 @@ public class PlaylistServiceUnitTest {
     @Test
     void updateTest() {
     	
-    	Playlist pl = new Playlist("Summer Choonz");
-    	
-        pl.setId(this.id);
-
-        PlaylistDTO playlistDTO = new PlaylistDTO(id, "Summer Choonz");
-
-        Playlist newPlaylist = new Playlist(playlistDTO.getName());
-        
-        newPlaylist.setId(this.id);
-
-        PlaylistDTO newPlaylistDTO = new PlaylistDTO(this.id, newPlaylist.getName());
-
-        when(this.repository.findById(this.id)).thenReturn(Optional.of(pl));
-        when(this.repository.save(pl)).thenReturn(newPlaylist);
-        when(this.modelMapper.map(newPlaylist, PlaylistDTO.class)).thenReturn(newPlaylistDTO);
-
-        assertThat(newPlaylistDTO).isEqualTo(this.service.update(playlistDTO, this.id));
-
-        verify(this.repository, times(1)).findById(1L);
-        verify(this.repository, times(1)).save(newPlaylist);
+    	final PlaylistDTO newPlaylist = new PlaylistDTO(testName,testDesc,testArtwork);
+    	newPlaylist.setId(this.id);
+    	Playlist updatedPlaylist = new Playlist(newPlaylist.getName(), newPlaylist.getDescription(), newPlaylist.getArtwork());
+        updatedPlaylist.setId(this.id);
+
+        String result = this.mock
+                .perform(request(HttpMethod.PUT, "/playlists/update/" + this.id)
+                        .accept(MediaType.APPLICATION_JSON)
+                        .contentType(MediaType.APPLICATION_JSON)
+                        .content(this.objectMapper.writeValueAsString(newPlaylist)))
+                .andExpect(status().isAccepted()).andReturn().getResponse().getContentAsString();
+
+        assertEquals(this.objectMapper.writeValueAsString(this.mapToDTO(updatedPlaylist)), result);
     }
 
     @Test
